version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: ecommerce_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecommerce_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce_network

  # MailHog for email testing (SMTP server)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ecommerce_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - ecommerce_network

  # Next.js App
  web:
    build: .
    container_name: ecommerce_web
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://postgres:password123@postgres:5432/ecommerce
      REDIS_URL: redis://redis:6379
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - ecommerce_network
    command: sh -c "npx prisma migrate deploy && npx prisma generate && npm run db:seed && npm run dev"

volumes:
  postgres_data:
  redis_data:

networks:
  ecommerce_network:
    driver: bridge